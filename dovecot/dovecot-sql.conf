# Database driver: mysql, pgsql, sqlite
driver = pgsql
#   For available options, see the PostgreSQL documention for the
#   PQconnectdb function of libpq.
#   Use maxconns=n (default 5) to change how many connections Dovecot can
#   create to pgsql.

# Examples:
#   connect = host=192.168.1.1 dbname=users
#   connect = host=sql.example.com dbname=virtual user=virtual password=blarg
#   connect = /etc/dovecot/authdb.sqlite
#
connect = host=postgres dbname=mail user=mail password=Cqg2amU7SY

# Default password scheme.
#
# List of supported schemes is in
# http://wiki2.dovecot.org/Authentication/PasswordSchemes
#
default_pass_scheme = SHA512-CRYPT

# passdb query to retrieve the password. It can return fields:
#   password - The user's password. This field must be returned.
#   user - user@domain from the database. Needed with case-insensitive lookups.
#   username and domain - An alternative way to represent the "user" field.
#
# The "user" field is often necessary with case-insensitive lookups to avoid
# e.g. "name" and "nAme" logins creating two different mail directories. If
# your user and domain names are in separate fields, you can return "username"
# and "domain" fields instead of "user".
#
# The query can also return other fields which have a special meaning, see
# http://wiki2.dovecot.org/PasswordDatabase/ExtraFields
#
# Commonly used available substitutions (see http://wiki2.dovecot.org/Variables
# for full list):
#   %u = entire user@domain
#   %n = user part of user@domain
#   %d = domain part of user@domain
#
# Note that these can be used only as input to SQL query. If the query outputs
# any of these substitutions, they're not touched. Otherwise it would be
# difficult to have eg. usernames containing '%' characters.
#
# Example:
#   password_query = SELECT userid AS user, pw AS password \
#     FROM users WHERE userid = '%u' AND active = 'Y'


# userdb query to retrieve the user information. It can return fields:
#   uid - System UID (overrides mail_uid setting)
#   gid - System GID (overrides mail_gid setting)
#   home - Home directory
#   mail - Mail location (overrides mail_location setting)
#
# None of these are strictly required. If you use a single UID and GID, and
# home or mail directory fits to a template string, you could use userdb static
# instead. For a list of all fields that can be returned, see
# http://wiki2.dovecot.org/UserDatabase/ExtraFields
#
# Examples:
#   user_query = SELECT home, uid, gid FROM users WHERE userid = '%u'
#   user_query = SELECT dir AS home, user AS uid, group AS gid FROM users where userid = '%u'
#   user_query = SELECT home, 501 AS uid, 501 AS gid FROM users WHERE userid = '%u'
#
user_query = \
  SELECT users.name as username, users.domain as domain, \
         'vmail' AS uid, 'vmail' AS gid \
  FROM users, alias \
  WHERE users.name = alias.aka_name AND \
        users.domain = alias.aka_domain AND \
        alias.name = '%n' AND alias.domain = '%d' \
  UNION DISTINCT \
  SELECT users.name as username, users.domain as domain, \
         'vmail' AS uid, 'vmail' AS gid \
  FROM users \
  WHERE users.name = '%n' AND users.domain = '%d'

# For using doveadm -A:
#iterate_query = SELECT users.name AS username, users.domain as domain FROM users

# If you wish to avoid two SQL lookups (passdb + userdb), you can use
# userdb prefetch instead of userdb sql in dovecot.conf. In that case you'll
# also have to return userdb fields in password_query prefixed with "userdb_"
# string. For example:
#password_query = \
#  SELECT userid AS user, password, \
#    home AS userdb_home, uid AS userdb_uid, gid AS userdb_gid \
#  FROM users WHERE userid = '%u'


# This query assumes a database structure with two tables:
#   user
#   alias
# Where each destination address must have an alias defined. Think of the
# users table simply as the directory mapping.
#
# %u = john@example.com
# %n = john
# %d = example.com
password_query = \
  SELECT users.name as username, users.password as password, \
         users.domain as domain, 'vmail' AS userdb_uid, 'vmail' AS userdb_gid \
  FROM users, alias \
  WHERE users.name = alias.aka_name AND \
        users.domain = alias.aka_domain AND \
        alias.name = '%n' AND alias.domain = '%d' \
UNION DISTINCT \
  SELECT users.name as username, users.password as password, \
         users.domain as domain, 'vmail' AS userdb_uid, 'vmail' AS userdb_gid \
  FROM users \
  WHERE users.name = '%n' AND users.domain = '%d'
