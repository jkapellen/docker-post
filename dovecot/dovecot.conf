## Dovecot configuration file

# Enable installed protocols
!include_try /usr/share/dovecot/protocols.d/*.protocol

##
## Dictionary server settings
##

# Dictionary can be used to store key=value lists. This is used by several
# plugins. The dictionary can be accessed either directly or though a
# dictionary server. The following dict block maps dictionary names to URIs
# when the server is used. These can then be referenced using URIs in format
# "proxy::<name>".

dict {
  #quota = mysql:/etc/dovecot/dovecot-dict-sql.conf.ext
  #expire = sqlite:/etc/dovecot/dovecot-dict-sql.conf.ext
}

# Most of the actual configuration gets included below. The filenames are
# first sorted by their ASCII value and parsed in that order. The 00-prefixes
# in filenames are intended to make it easier to understand the ordering.
#!include conf.d/*.conf

# A config file can also tried to be included without giving an error if
# it's not found:
#!include_try local.conf

auth_mechanisms = plain login
log_path = /var/log/dovecot.log
info_log_path = /var/log/dovecot.log

# Dovecot's home directories have nothing to do with system users'
# home directories.  Home directory shouldn't be the same as mail
# directory. It's possible to do that, but you might run into trouble
# with it sooner or later. Some problems with this are:
#
## Non-mailbox files may show up as mailboxes.
#
### If you see this with Maildir, maildir_stat_dirs=yes hides them.
#
## Or user just might not be able to create mailbox with wanted name,
## because there already exists a conflicting file
#
### e.g. with Maildir if you have .dovecot.sieve file, user can't
### create a mailbox called "dovecot.sieve" (i.e. "dovecot" mailbox
### that has a "sieve" child)
#
## And vice versa: If user creates "dovecot.sieve" mailbox, Dovecot
## will probably start logging all kinds of errors because the mailbox
## directory isn't a valid Sieve script.
#
## If you ever intend to migrate to another mailbox format, it's much
## easier to do if you can have both old and new mail directories
## under the user's home directory.
mail_home = /var/vmail/%d/%n
mail_location = maildir:~/mail

namespace inbox {
  inbox = yes
  location =
  mailbox Drafts {
    special_use = \Drafts
  }
  mailbox Junk {
    special_use = \Junk
  }
  mailbox Sent {
    special_use = \Sent
  }
  mailbox "Sent Messages" {
    special_use = \Sent
  }
  mailbox Trash {
    special_use = \Trash
  }
  prefix =
}

# Let password database also handle user info.
# We could use static, but I want to support login with alias
userdb {
  driver = prefetch
}
# userdb {
#   args = uid=vmail gid=vmail
#   driver = static
# }


passdb {
  args = /etc/dovecot/dovecot-sql.conf
  driver = sql
}

auth_verbose = yes

protocols = imap pop3 lmtp sieve

managesieve_notify_capability = mailto
managesieve_sieve_capability = fileinto reject envelope encoded-character vacation subaddress comparator-i;ascii-numeric relational regex imap4flags copy include variables body enotify environment mailbox date ihave vnd.dovecot.filter

# TODO
#ssl = required
#ssl_cert = </etc/ssl/certs/dovecot.pem
#ssl_key = </etc/ssl/private/dovecot.pem

# We use lmtp instead
#protocol lda {
#  mail_plugins = $mail_plugins sieve
#}

# Should saving a mail to a nonexistent mailbox automatically create it?
# Also used by lmtp
lda_mailbox_autocreate = no

protocol lmtp {
  # Required?
  postmaster_address = postmaster@example.com
  hostname = mail.example.com
  mail_plugins = $mail_plugins sieve
}

service lmtp {
  user = vmail
  inet_listener lmtp {
    address = * ::1
    port = 24
  }
}

plugin {
  sieve = ~/.dovecot.sieve
  sieve_before = /etc/dovecot/scripts/.sieve
  sieve_dir = ~/sieve
  sieve_extensions = +vnd.dovecot.filter
  sieve_filter_bin_dir = /etc/dovecot/sieve-filters
  sieve_global_dir = /etc/dovecot/scripts
  sieve_plugins = sieve_extprograms
}

# Important to avoid POODLE and FREAK attacks
# See https://weakdh.org/sysadmin.html
ssl_cipher_list=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA
ssl_prefer_server_ciphers = yes
#regenerates every week
ssl_dh_parameters_length = 2048